c
@place.opening_hours["periods"]
@place.opening_hours
@place.name
@place
c
Geocoder.search("84.251.113.199").first.data["loc"]
request.remote_ip
Geocoder.search(84.251.113.199).first
Geocoder.search(request.remote_ip).first.data["loc"]
request
Geocoder
loc
c
loc
c
Rating.all.select{|r| r.place_id==3}c
Rating.all
Rating.all.select{|r| r.place_id==3}
c
Rating.validate?(rating_params)
params
c
params
c
params
c
Rating.count
Rating.last
c
is_number?(params[:score])
params[:score]
c
params[:score]
c
is_number?(params[:score])
params[:score]
c
"KKK".to_i
params[:score]
c
params[:score]
c
params[:score].is_a?(Integer)
params[:score].class==Integer
params[:score].class==:Integer
params
c
params
c
params
c
Rating.validate?(rating_params)
rating_params
c
rating_params
c
rating_params
c
Rating.last
c
create_user_pw("Pekka")
c
user
c
Rating.first.get_place
Rating.first
Rating.all
c
PlaceApi.get_place(place_id)
PlaceApi.get_place(place_id.to_i)
place_id
Rating.all
c
place_id.to_i
PlaceApi.get_place(place_id.to_i)
PlaceApi.get_place(place_id.to_s)
c
PlaceApi.get_place(place_id)
place_id
c
place_id
c
rating.place_id
places_path+"/"+rating.get_place.place_id
places_path+"/"
places_path
rating.get_place.name
rating.get_place
rating.place_id
Rating.place_id
c
rating.place_id
c
place_id
 PlaceApi.get_place(place_id.to_i)
c
 PlaceApi.get_place(place_id.to_i)
c
PlaceApi.get_place(place_id.to_i)
PlaceApi.get_place(place_id)
PlaceApi.get_place
PlaceApi
c
PlaceApi.get_place(3)
PlaceApi.get_place(2)
PlaceApi.get_place(1)
Places.all
Rating.all
PlaceApi.get_place(place_id)
place_id
c
PlaceApi.get_place(place_id)
place_id
c
PlaceApi.get_place(place_id)
place_id
rating.get_place
c
rating.get_user
rating
c
Rating.all
Rating.all'
Rating.count
c
params
c
params
c
params
c
route
params
c
params
c
params
c
params
c
c'
params
c
@place.opening_hours["periods"]
@place.opening_hours
c
@place.opening_hours
c
@place.opening_hours["periods"]
c
@place.opening_hours
@place
c
places
places=PlaceApi.search_by_coordinates(lat, lng, params[:type])
PlaceApi.search_by_coordinates(lat, lng, params[:type])
params[:type]
lng
lat
c
loc
c
loc.data["loc"]
loc.data
loc
loc=Geocoder::Result::Base.new data={"loc"=>"15,51"}
loc=_
Geocoder::Result::Base.new data={"loc"=>"15,51"}
c
Geocoder::Result::Base.new data="asd"
Geocoder::Result::Base.new
c
GocoderResult.new data="asd"
GocoderResult.new
Object.data="asd"
Object.new 
Object.new data="asd"
Place.new data="asd"
Place.new data=asd
Geocoder.new
loc=Geocoder.search("88.192.41.150").first.data
loc=Geocoder.search("88.192.41.150").first
loc=Geocoder.search("88.192.41.150")
loc=Geocoder.search("88.192.41.150").first.data["loc"]
c
Geocoder::Result.new data={"loc"=>"15,51"}
Result.new data={"loc"=>"15,51"}
loc=Geocoder.search("88.192.41.150")
loc=Geocoder.search("88.192.41.150").
c
Geocoder.new data={"loc"=>"15,51"}
loc=Geocoder.search("88.192.41.150").first.data
loc=Geocoder.search("88.192.41.150").first
c
loc=Geocoder.search("88.192.41.150")
loc=Geocoder.search("88.192.41.150").first.data["loc"]
c
params[:city]
c
params[:city]
c
params[:city]
c
params[:city]
c
params[:city]
c
params[:city]
c
params[:city]==""
params[:city]=="
params[:city] or not params[:city].equal?""
params[:city] or not params[:city]==""
c
params
c
params[:city]
c
params[:city]
c
params
params[:city]
c
params
c
params
c
user_params
params
c
user_params
params
c
User.all
c
user_path(User.first)
User.first
c
User.count
User.all
c
User.last
User.all
c
User.all
c
User.all
c
Rating.all
c
PlaceApi.get_place(Rating.last.place_id)
Rating.last.get_place
Rating.last
c
place.types
