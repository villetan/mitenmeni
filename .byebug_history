c
@places
c
user
c
user_params[:password_confirmation]
user_params
c
user_params
params
c
User.validate_edit?(user_params)
User.validate?(user_params)
user_params
c
User.validate?(user_params)
user_params
c
Friendship.all.map(&:status).include? "pending"
Friendship.all.map(&:status)
c
Friendship.all.map(&:status)
Friendship.all
c
users
c
user_pw
c
User.all
Kalle
c
User.all
User.last.delete
User.last
c
k.authenticate?("Kalle","Kalle1")
k.authenticate("Kalle","Kalle1")
k=User.first
User.authenticate("Kalle", "Kalle1")
User.all
c
User.all
c
Rating.get_ratings_for_restaurant("asdffeqasd").map(&:score)
Rating.get_ratings_for_restaurant("asdffeqasd")
c
params[:score].to_i>0
params[:score].length>0
params[:score]
Rating.validate?(params)
params
c
params[:place_id]
params[:score] <=10
params
c
params
Rating.validate?(params)
params
c
Rating.validate?(params)
params
c
user
c
User.all
user
c
user
c
user
User.validate_edit?(params)
params
user
c
params["friend_a_id"]
params
c
params
c
params
c
user_params
c
user_params
params
params["old_password"]
user_params["password"]
user_params["password_confirmation"]
c
user_params
c
user_params
c
user_params
params
c
User.validate_edit?(user_params)
user_params
c
User.validate?(user_params)
user_params
@user
c
user_params
params
c
User
user.updateUser(pw_enc, pw_salt)
user.updateUser
user
user.updateUser(pw_enc, pw_salt)
user
pw_salt
pw_enc
c
params[:username]
c
params
c
params["username"]
params["username"
User.validate? params
User.validate?
User.validate?(params)
User
params
User.validate?(params)
c
params={:username => "Kalle"}
params=[:username => "Kalle"]
c
Friendship.get_pending_requests(current_user)
current_user
@requests
c
user.getRatings
user
rating
c
User.count
User.all
c
:user
let(:user){User.createNew(params, password_encrypted, password_salt).first}
user
c
User.createNew(params, password_encrypted, password_salt)
c
lng
lat
@places
c
@places.first.formatted_address
@places.first
@places
c
places
c
params[:my_place][:checked].to_i==1
params[:my_place][:checked]==1
params[:my_place][:checked].equal? ("1")
params[:my_place][:checked].equal? 1
params[:my_place][:checked].equal? "1"
params[:my_place][:checked]
params[:my_place]
params[:city]
params[:City]
params
c
params[:my_place][:checked]
params[:my_place]
params
c
params
c
params
c
params
params[:my_place]
params
c
params
c
C
c
rating_params
c
rating_params
params
c
params
c
params[:place_id]
rating_params
params
c
params[:place_id]
rating_params
params
c
@place
rating_params
params
c
params
rating_params
c
params[:place_id]
rating_params
rating:params
params
c
rating_params
params
c
c'
rating_params
params
c
rating_params
c
params
c
params[:type]
c
places
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
client
c
Rating.validate?(rating_params, session[:place_id])
c
Rating.validate?(rating_params, session[:place_id])
c
Rating.validate?(rating_params, session[:place_id])
session[:previous]
session
